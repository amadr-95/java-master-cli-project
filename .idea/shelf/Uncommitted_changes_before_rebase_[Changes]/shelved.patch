Index: src/main/java/com/project/booking/BookingService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.project.booking;\r\n\r\nimport com.project.car.Car;\r\nimport com.project.car.CarService;\r\nimport com.project.user.User;\r\nimport com.project.user.UserService;\r\n\r\nimport java.util.UUID;\r\n\r\npublic class BookingService {\r\n\r\n    private final BookingDAO bookingDAO;\r\n    private final CarService carService;\r\n    private final UserService userService;\r\n\r\n    public BookingService() {\r\n        this.bookingDAO = new BookingDAO();\r\n        this.carService = new CarService();\r\n        this.userService = new UserService();\r\n    }\r\n\r\n    public Booking[] getAllBookings() {\r\n        return bookingDAO.getAllBookings();\r\n    }\r\n\r\n    public Booking bookACar(UUID uuidCar, UUID uuidUser) {\r\n        Car car = carService.findCarById(uuidCar);\r\n        User user = userService.findUserById(uuidUser);\r\n        if (car == null)\r\n            throw new IllegalArgumentException(\"Car does not exist\");\r\n        if (user == null)\r\n            throw new IllegalArgumentException(\"User does not exist\");\r\n        if (user.getCar() != null)\r\n            throw new IllegalArgumentException(\"User has already booked a car\");\r\n\r\n        car.setAvailable(false);\r\n        user.setCar(car);\r\n        return bookingDAO.saveBooking(new Booking(user, car));\r\n    }\r\n\r\n    public Booking getCarBookedByUser(UUID uuidUser) {\r\n        for (Booking booking : getAllBookings()) {\r\n            if (booking.getUser().getUuid().equals(uuidUser)) {\r\n                return booking;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/booking/BookingService.java b/src/main/java/com/project/booking/BookingService.java
--- a/src/main/java/com/project/booking/BookingService.java	(revision 5ea4c0bc2609e53173eeb19f5af282f90cae0e78)
+++ b/src/main/java/com/project/booking/BookingService.java	(date 1692816334021)
@@ -9,18 +9,18 @@
 
 public class BookingService {
 
-    private final BookingDAO bookingDAO;
+    private final BookingDAO bookingArrayDataAccessService;
     private final CarService carService;
     private final UserService userService;
 
     public BookingService() {
-        this.bookingDAO = new BookingDAO();
+        this.bookingArrayDataAccessService = new BookingArrayDataAccessService();
         this.carService = new CarService();
         this.userService = new UserService();
     }
 
     public Booking[] getAllBookings() {
-        return bookingDAO.getAllBookings();
+        return bookingArrayDataAccessService.getAllBookings();
     }
 
     public Booking bookACar(UUID uuidCar, UUID uuidUser) {
@@ -35,7 +35,7 @@
 
         car.setAvailable(false);
         user.setCar(car);
-        return bookingDAO.saveBooking(new Booking(user, car));
+        return bookingArrayDataAccessService.saveBooking(new Booking(user, car));
     }
 
     public Booking getCarBookedByUser(UUID uuidUser) {
Index: src/main/java/com/project/booking/BookingDAO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.project.booking;\r\n\r\nimport java.util.Arrays;\r\n\r\npublic class BookingDAO {\r\n    private static final int CAPACITY = 1;\r\n    private static Booking[] bookings;\r\n    private static int nextAvailableSlot;\r\n\r\n    static {\r\n        bookings = new Booking[CAPACITY];\r\n        nextAvailableSlot = 0;\r\n    }\r\n\r\n    public Booking[] getAllBookings() {\r\n        int numberOfBookings = getNumberOfBookings();\r\n        if (numberOfBookings == 0)\r\n            return new Booking[0];\r\n        else if (numberOfBookings == bookings.length)\r\n            return bookings;\r\n\r\n        Booking[] getBookings = new Booking[numberOfBookings];\r\n        int index = 0;\r\n        for (Booking booking : bookings) {\r\n            if (booking != null)\r\n                getBookings[index++] = booking;\r\n        }\r\n        return getBookings;\r\n    }\r\n\r\n    private int getNumberOfBookings() {\r\n        int count = 0;\r\n        for (Booking booking : bookings) {\r\n            if (booking != null)\r\n                count++;\r\n        }\r\n        return count;\r\n    }\r\n\r\n    public Booking saveBooking(Booking booking) {\r\n        if (nextAvailableSlot >= CAPACITY)\r\n            bookings = growBookings();\r\n        return bookings[nextAvailableSlot++] = booking;\r\n    }\r\n\r\n    private Booking[] growBookings() {\r\n        return Arrays.copyOf(bookings, bookings.length + 1);\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/booking/BookingDAO.java b/src/main/java/com/project/booking/BookingDAO.java
--- a/src/main/java/com/project/booking/BookingDAO.java	(revision 5ea4c0bc2609e53173eeb19f5af282f90cae0e78)
+++ b/src/main/java/com/project/booking/BookingDAO.java	(date 1692816375962)
@@ -1,50 +1,8 @@
 package com.project.booking;
 
-import java.util.Arrays;
-
-public class BookingDAO {
-    private static final int CAPACITY = 1;
-    private static Booking[] bookings;
-    private static int nextAvailableSlot;
-
-    static {
-        bookings = new Booking[CAPACITY];
-        nextAvailableSlot = 0;
-    }
-
-    public Booking[] getAllBookings() {
-        int numberOfBookings = getNumberOfBookings();
-        if (numberOfBookings == 0)
-            return new Booking[0];
-        else if (numberOfBookings == bookings.length)
-            return bookings;
-
-        Booking[] getBookings = new Booking[numberOfBookings];
-        int index = 0;
-        for (Booking booking : bookings) {
-            if (booking != null)
-                getBookings[index++] = booking;
-        }
-        return getBookings;
-    }
-
-    private int getNumberOfBookings() {
-        int count = 0;
-        for (Booking booking : bookings) {
-            if (booking != null)
-                count++;
-        }
-        return count;
-    }
+public interface BookingDAO {
 
-    public Booking saveBooking(Booking booking) {
-        if (nextAvailableSlot >= CAPACITY)
-            bookings = growBookings();
-        return bookings[nextAvailableSlot++] = booking;
-    }
+    Booking[] getAllBookings();
 
-    private Booking[] growBookings() {
-        return Arrays.copyOf(bookings, bookings.length + 1);
-    }
-
-}
\ No newline at end of file
+    Booking saveBooking(Booking booking);
+}
Index: src/main/java/com/project/booking/BookingArrayDataAccessService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/booking/BookingArrayDataAccessService.java b/src/main/java/com/project/booking/BookingArrayDataAccessService.java
new file mode 100644
--- /dev/null	(date 1692816375968)
+++ b/src/main/java/com/project/booking/BookingArrayDataAccessService.java	(date 1692816375968)
@@ -0,0 +1,52 @@
+package com.project.booking;
+
+import java.util.Arrays;
+
+public class BookingArrayDataAccessService implements BookingDAO {
+    private static final int CAPACITY = 1;
+    private static Booking[] bookings;
+    private static int nextAvailableSlot;
+
+    static {
+        bookings = new Booking[CAPACITY];
+        nextAvailableSlot = 0;
+    }
+
+    @Override
+    public Booking[] getAllBookings() {
+        int numberOfBookings = getNumberOfBookings();
+        if (numberOfBookings == 0)
+            return new Booking[0];
+        else if (numberOfBookings == bookings.length)
+            return bookings;
+
+        Booking[] getBookings = new Booking[numberOfBookings];
+        int index = 0;
+        for (Booking booking : bookings) {
+            if (booking != null)
+                getBookings[index++] = booking;
+        }
+        return getBookings;
+    }
+
+    private int getNumberOfBookings() {
+        int count = 0;
+        for (Booking booking : bookings) {
+            if (booking != null)
+                count++;
+        }
+        return count;
+    }
+
+    @Override
+    public Booking saveBooking(Booking booking) {
+        if (nextAvailableSlot >= CAPACITY)
+            bookings = growBookings();
+        return bookings[nextAvailableSlot++] = booking;
+    }
+
+    private Booking[] growBookings() {
+        return Arrays.copyOf(bookings, bookings.length + 1);
+    }
+
+}
\ No newline at end of file
Index: .idea/uiDesigner.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/uiDesigner.xml b/.idea/uiDesigner.xml
new file mode 100644
--- /dev/null	(date 1692816058386)
+++ b/.idea/uiDesigner.xml	(date 1692816058386)
@@ -0,0 +1,124 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="Palette2">
+    <group name="Swing">
+      <item class="com.intellij.uiDesigner.HSpacer" tooltip-text="Horizontal Spacer" icon="/com/intellij/uiDesigner/icons/hspacer.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="1" hsize-policy="6" anchor="0" fill="1" />
+      </item>
+      <item class="com.intellij.uiDesigner.VSpacer" tooltip-text="Vertical Spacer" icon="/com/intellij/uiDesigner/icons/vspacer.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="1" anchor="0" fill="2" />
+      </item>
+      <item class="javax.swing.JPanel" icon="/com/intellij/uiDesigner/icons/panel.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JScrollPane" icon="/com/intellij/uiDesigner/icons/scrollPane.svg" removable="false" auto-create-binding="false" can-attach-label="true">
+        <default-constraints vsize-policy="7" hsize-policy="7" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JButton" icon="/com/intellij/uiDesigner/icons/button.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="0" fill="1" />
+        <initial-values>
+          <property name="text" value="Button" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JRadioButton" icon="/com/intellij/uiDesigner/icons/radioButton.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="RadioButton" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JCheckBox" icon="/com/intellij/uiDesigner/icons/checkBox.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="CheckBox" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JLabel" icon="/com/intellij/uiDesigner/icons/label.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="0" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="Label" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JTextField" icon="/com/intellij/uiDesigner/icons/textField.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JPasswordField" icon="/com/intellij/uiDesigner/icons/passwordField.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JFormattedTextField" icon="/com/intellij/uiDesigner/icons/formattedTextField.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTextArea" icon="/com/intellij/uiDesigner/icons/textArea.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTextPane" icon="/com/intellij/uiDesigner/icons/textPane.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JEditorPane" icon="/com/intellij/uiDesigner/icons/editorPane.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JComboBox" icon="/com/intellij/uiDesigner/icons/comboBox.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="2" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JTable" icon="/com/intellij/uiDesigner/icons/table.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JList" icon="/com/intellij/uiDesigner/icons/list.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="2" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTree" icon="/com/intellij/uiDesigner/icons/tree.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTabbedPane" icon="/com/intellij/uiDesigner/icons/tabbedPane.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
+          <preferred-size width="200" height="200" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JSplitPane" icon="/com/intellij/uiDesigner/icons/splitPane.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
+          <preferred-size width="200" height="200" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JSpinner" icon="/com/intellij/uiDesigner/icons/spinner.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JSlider" icon="/com/intellij/uiDesigner/icons/slider.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JSeparator" icon="/com/intellij/uiDesigner/icons/separator.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JProgressBar" icon="/com/intellij/uiDesigner/icons/progressbar.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1" />
+      </item>
+      <item class="javax.swing.JToolBar" icon="/com/intellij/uiDesigner/icons/toolbar.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1">
+          <preferred-size width="-1" height="20" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JToolBar$Separator" icon="/com/intellij/uiDesigner/icons/toolbarSeparator.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="0" anchor="0" fill="1" />
+      </item>
+      <item class="javax.swing.JScrollBar" icon="/com/intellij/uiDesigner/icons/scrollbar.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="0" anchor="0" fill="2" />
+      </item>
+    </group>
+  </component>
+</project>
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"e55038ed-f2f1-4594-aaec-eaf58f659397\" name=\"Changes\" comment=\"\">\r\n      <change afterPath=\"$PROJECT_DIR$/.gitignore\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/encodings.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/inspectionProfiles/Project_Default.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/misc.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/vcs.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/pom.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/com/project/Main.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/com/project/booking/Booking.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/com/project/booking/BookingDAO.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/com/project/booking/BookingService.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/com/project/car/Car.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/com/project/car/CarBrand.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/com/project/car/CarDAO.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/com/project/car/CarService.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/com/project/user/User.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/com/project/user/UserDAO.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/com/project/user/UserService.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Enum\" />\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"MavenImportPreferences\">\r\n    <option name=\"generalSettings\">\r\n      <MavenGeneralSettings>\r\n        <option name=\"mavenHome\" value=\"$USER_HOME$/Maven/apache-maven-3.9.3\" />\r\n      </MavenGeneralSettings>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectColorInfo\"><![CDATA[{\r\n  \"customColor\": \"\",\r\n  \"associatedIndex\": -1\r\n}]]></component>\r\n  <component name=\"ProjectId\" id=\"2UOXBfrpyM1d6gEdsfi2JC4KkTe\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"SHARE_PROJECT_CONFIGURATION_FILES\": \"true\",\r\n    \"git-widget-placeholder\": \"master\",\r\n    \"ignore.virus.scanning.warn.message\": \"true\",\r\n    \"last_opened_file_path\": \"C:/Users/Amador/IdeaProjects/amigoscode\",\r\n    \"settings.editor.selected.configurable\": \"MavenSettings\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.project.Main\" />\r\n      <module name=\"java-master-cli-project\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.project.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.Main\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"e55038ed-f2f1-4594-aaec-eaf58f659397\" name=\"Changes\" comment=\"\" />\r\n      <created>1692811468697</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1692811468697</updated>\r\n    </task>\r\n    <servers />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 5ea4c0bc2609e53173eeb19f5af282f90cae0e78)
+++ b/.idea/workspace.xml	(date 1692816376015)
@@ -5,24 +5,17 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="e55038ed-f2f1-4594-aaec-eaf58f659397" name="Changes" comment="">
-      <change afterPath="$PROJECT_DIR$/.gitignore" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/encodings.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/inspectionProfiles/Project_Default.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/pom.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/main/java/com/project/Main.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/main/java/com/project/booking/Booking.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/main/java/com/project/booking/BookingDAO.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/main/java/com/project/booking/BookingService.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/main/java/com/project/car/Car.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/main/java/com/project/car/CarBrand.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/main/java/com/project/car/CarDAO.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/main/java/com/project/car/CarService.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/main/java/com/project/user/User.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/main/java/com/project/user/UserDAO.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/main/java/com/project/user/UserService.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/uiDesigner.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/com/project/booking/BookingArrayDataAccessService.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/com/project/car/CarArrayDataAccessService.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/com/project/user/UserArrayDataAccessService.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/project/booking/BookingDAO.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/project/booking/BookingDAO.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/project/booking/BookingService.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/project/booking/BookingService.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/project/car/CarDAO.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/project/car/CarDAO.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/project/car/CarService.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/project/car/CarService.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/project/user/UserDAO.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/project/user/UserDAO.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/project/user/UserService.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/project/user/UserService.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -34,6 +27,7 @@
       <list>
         <option value="Enum" />
         <option value="Class" />
+        <option value="Interface" />
       </list>
     </option>
   </component>
@@ -50,10 +44,10 @@
       </MavenGeneralSettings>
     </option>
   </component>
-  <component name="ProjectColorInfo"><![CDATA[{
-  "customColor": "",
-  "associatedIndex": -1
-}]]></component>
+  <component name="ProjectColorInfo">{
+  &quot;customColor&quot;: &quot;&quot;,
+  &quot;associatedIndex&quot;: -1
+}</component>
   <component name="ProjectId" id="2UOXBfrpyM1d6gEdsfi2JC4KkTe" />
   <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
   <component name="ProjectViewState">
@@ -65,7 +59,7 @@
     "RunOnceActivity.OpenProjectViewOnStart": "true",
     "RunOnceActivity.ShowReadmeOnStart": "true",
     "SHARE_PROJECT_CONFIGURATION_FILES": "true",
-    "git-widget-placeholder": "master",
+    "git-widget-placeholder": "step2-interfaces",
     "ignore.virus.scanning.warn.message": "true",
     "last_opened_file_path": "C:/Users/Amador/IdeaProjects/amigoscode",
     "settings.editor.selected.configurable": "MavenSettings"
