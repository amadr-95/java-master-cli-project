Index: src/main/java/com/project/booking/BookingArrayDataAccessService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.project.booking;\r\n\r\nimport java.util.Arrays;\r\n\r\npublic class BookingArrayDataAccessService implements BookingDAO {\r\n    private static final int CAPACITY = 1;\r\n    private static Booking[] bookings;\r\n    private static int nextAvailableSlot;\r\n\r\n    static {\r\n        bookings = new Booking[CAPACITY];\r\n        nextAvailableSlot = 0;\r\n    }\r\n\r\n    @Override\r\n    public Booking[] getAllBookings() {\r\n        int numberOfBookings = getNumberOfBookings();\r\n        if (numberOfBookings == 0)\r\n            return new Booking[0];\r\n        else if (numberOfBookings == bookings.length)\r\n            return bookings;\r\n\r\n        Booking[] getBookings = new Booking[numberOfBookings];\r\n        int index = 0;\r\n        for (Booking booking : bookings) {\r\n            if (booking != null)\r\n                getBookings[index++] = booking;\r\n        }\r\n        return getBookings;\r\n    }\r\n\r\n    private int getNumberOfBookings() {\r\n        int count = 0;\r\n        for (Booking booking : bookings) {\r\n            if (booking != null)\r\n                count++;\r\n        }\r\n        return count;\r\n    }\r\n\r\n    @Override\r\n    public Booking saveBooking(Booking booking) {\r\n        if (nextAvailableSlot >= CAPACITY)\r\n            bookings = growBookings();\r\n        return bookings[nextAvailableSlot++] = booking;\r\n    }\r\n\r\n    private Booking[] growBookings() {\r\n        return Arrays.copyOf(bookings, bookings.length + 1);\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/booking/BookingArrayDataAccessService.java b/src/main/java/com/project/booking/BookingArrayDataAccessService.java
--- a/src/main/java/com/project/booking/BookingArrayDataAccessService.java	(revision d53c91abe2bc02acf0c928f732a5b49aa0f918ec)
+++ b/src/main/java/com/project/booking/BookingArrayDataAccessService.java	(date 1692893183506)
@@ -1,52 +1,22 @@
 package com.project.booking;
 
-import java.util.Arrays;
+import java.util.ArrayList;
+import java.util.List;
 
 public class BookingArrayDataAccessService implements BookingDAO {
-    private static final int CAPACITY = 1;
-    private static Booking[] bookings;
-    private static int nextAvailableSlot;
+    private static List<Booking> bookings;
 
-    static {
-        bookings = new Booking[CAPACITY];
-        nextAvailableSlot = 0;
+    public BookingArrayDataAccessService() {
+        bookings = new ArrayList<>();
     }
 
     @Override
-    public Booking[] getAllBookings() {
-        int numberOfBookings = getNumberOfBookings();
-        if (numberOfBookings == 0)
-            return new Booking[0];
-        else if (numberOfBookings == bookings.length)
-            return bookings;
-
-        Booking[] getBookings = new Booking[numberOfBookings];
-        int index = 0;
-        for (Booking booking : bookings) {
-            if (booking != null)
-                getBookings[index++] = booking;
-        }
-        return getBookings;
-    }
-
-    private int getNumberOfBookings() {
-        int count = 0;
-        for (Booking booking : bookings) {
-            if (booking != null)
-                count++;
-        }
-        return count;
+    public List<Booking> getAllBookings() {
+        return bookings;
     }
 
     @Override
-    public Booking saveBooking(Booking booking) {
-        if (nextAvailableSlot >= CAPACITY)
-            bookings = growBookings();
-        return bookings[nextAvailableSlot++] = booking;
+    public void saveBooking(Booking booking) {
+        bookings.add(booking);
     }
-
-    private Booking[] growBookings() {
-        return Arrays.copyOf(bookings, bookings.length + 1);
-    }
-
 }
\ No newline at end of file
Index: src/main/java/com/project/booking/BookingService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.project.booking;\r\n\r\nimport com.project.car.Car;\r\nimport com.project.car.CarService;\r\nimport com.project.user.User;\r\nimport com.project.user.UserService;\r\n\r\nimport java.io.FileWriter;\r\nimport java.io.IOException;\r\nimport java.io.PrintWriter;\r\nimport java.util.UUID;\r\n\r\npublic class BookingService {\r\n\r\n    private final BookingDAO bookingArrayDataAccessService;\r\n    private final CarService carService;\r\n    private final UserService userService;\r\n\r\n    public BookingService(BookingDAO bookingArrayDataAccessService, CarService carService, UserService userService) {\r\n        this.bookingArrayDataAccessService = bookingArrayDataAccessService;\r\n        this.carService = carService;\r\n        this.userService = userService;\r\n    }\r\n\r\n    public Booking[] getAllBookings() {\r\n        return bookingArrayDataAccessService.getAllBookings();\r\n    }\r\n\r\n    public Booking bookACar(UUID uuidCar, UUID uuidUser) {\r\n        Car car = carService.findCarById(uuidCar);\r\n        User user = userService.findUserById(uuidUser);\r\n        if (car == null)\r\n            throw new IllegalArgumentException(\"Car does not exist\");\r\n        if (user == null)\r\n            throw new IllegalArgumentException(\"User does not exist\");\r\n        if (user.getCar() != null)\r\n            throw new IllegalArgumentException(\"User has already booked a car\");\r\n\r\n        car.setAvailable(false);\r\n        user.setCar(car);\r\n        Booking booking = new Booking(user, car);\r\n        saveBookingToAFile(booking);\r\n        return bookingArrayDataAccessService.saveBooking(booking);\r\n    }\r\n\r\n    private void saveBookingToAFile(Booking booking) {\r\n        String PATH = \"src/main/resources/bookings.txt\";\r\n        try (PrintWriter writer = new PrintWriter(new FileWriter(PATH, true))) {\r\n            writer.println(booking.getUser());\r\n            writer.println(booking.getCar());\r\n            writer.println(\"Ref: \" + booking.getUuid());\r\n            writer.println(\"Date: \" + booking.getDate());\r\n            writer.println();\r\n        } catch (IOException e) {\r\n            System.out.println(e.getMessage());\r\n        }\r\n    }\r\n\r\n    public Booking getCarBookedByUser(UUID uuidUser) {\r\n        for (Booking booking : getAllBookings()) {\r\n            if (booking.getUser().getUuid().equals(uuidUser)) {\r\n                return booking;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/booking/BookingService.java b/src/main/java/com/project/booking/BookingService.java
--- a/src/main/java/com/project/booking/BookingService.java	(revision d53c91abe2bc02acf0c928f732a5b49aa0f918ec)
+++ b/src/main/java/com/project/booking/BookingService.java	(date 1692892714557)
@@ -8,6 +8,7 @@
 import java.io.FileWriter;
 import java.io.IOException;
 import java.io.PrintWriter;
+import java.util.List;
 import java.util.UUID;
 
 public class BookingService {
@@ -22,7 +23,7 @@
         this.userService = userService;
     }
 
-    public Booking[] getAllBookings() {
+    public List<Booking> getAllBookings() {
         return bookingArrayDataAccessService.getAllBookings();
     }
 
@@ -40,7 +41,8 @@
         user.setCar(car);
         Booking booking = new Booking(user, car);
         saveBookingToAFile(booking);
-        return bookingArrayDataAccessService.saveBooking(booking);
+        bookingArrayDataAccessService.saveBooking(booking);
+        return booking;
     }
 
     private void saveBookingToAFile(Booking booking) {
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"e55038ed-f2f1-4594-aaec-eaf58f659397\" name=\"Changes\" comment=\"updated readme\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/project/Main.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/project/Main.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/project/booking/BookingService.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/project/booking/BookingService.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/project/car/CarService.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/project/car/CarService.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/project/user/UserService.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/project/user/UserService.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Enum\" />\r\n        <option value=\"Interface\" />\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"step2-interfaces-files\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"MavenImportPreferences\">\r\n    <option name=\"generalSettings\">\r\n      <MavenGeneralSettings>\r\n        <option name=\"mavenHome\" value=\"$USER_HOME$/Maven/apache-maven-3.9.3\" />\r\n      </MavenGeneralSettings>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 7\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2UOXBfrpyM1d6gEdsfi2JC4KkTe\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;step3-dependency-injection&quot;,\r\n    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/Amador/IdeaProjects/amigoscode&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;MavenSettings&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.project.Main\" />\r\n      <module name=\"java-master-cli-project\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.project.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.Main\" />\r\n        <item itemvalue=\"Application.Main\" />\r\n        <item itemvalue=\"Application.Main\" />\r\n        <item itemvalue=\"Application.Main\" />\r\n        <item itemvalue=\"Application.Main\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"e55038ed-f2f1-4594-aaec-eaf58f659397\" name=\"Changes\" comment=\"\" />\r\n      <created>1692811468697</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1692811468697</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"created UserDAO interface\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1692816632949</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1692816632949</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"changes to work with userDAO interface\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1692816677013</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1692816677013</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"created CarDAO interface\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1692816692676</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1692816692676</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"changes to work with CarDAO interface\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1692816706521</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1692816706521</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"created BookingDAO interface\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1692816750099</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1692816750100</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"changes to work with BookingDAO interface\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1692816762792</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1692816762792</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"updated readme\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1692816839623</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1692816839623</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"created files to read/write data from/to them\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1692817061605</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1692817061605</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"created class that implements UserDAO to read users from a file\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1692889988578</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1692889988578</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"changed property name\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1692890033777</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1692890033777</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"added second constructor with UUID to parse users from the file\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1692890126566</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1692890126566</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"feature: bookings data are saved in a file when they are made. Added method saveBookingToAFile()\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1692890253287</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1692890253287</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00013\" summary=\"updated readme\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1692890490004</created>\r\n      <option name=\"number\" value=\"00013\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1692890490004</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"14\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"created UserDAO interface\" />\r\n    <MESSAGE value=\"changes to work with UserDAO interface\" />\r\n    <MESSAGE value=\"created CarDAO interface\" />\r\n    <MESSAGE value=\"changes to work with CarDAO interface\" />\r\n    <MESSAGE value=\"created BookingDAO interface\" />\r\n    <MESSAGE value=\"changes to work with BookingDAO interface\" />\r\n    <MESSAGE value=\"created files to read/write data from/to them\" />\r\n    <MESSAGE value=\"created class that implements UserDAO to read users from a file\" />\r\n    <MESSAGE value=\"changed property name\" />\r\n    <MESSAGE value=\"added second constructor with UUID to parse users from the file\" />\r\n    <MESSAGE value=\"feature: bookings data are saved in a file when they are made. Added method saveBookingToAFile()\" />\r\n    <MESSAGE value=\"updated readme\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"updated readme\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision d53c91abe2bc02acf0c928f732a5b49aa0f918ec)
+++ b/.idea/workspace.xml	(date 1692893089154)
@@ -7,8 +7,15 @@
     <list default="true" id="e55038ed-f2f1-4594-aaec-eaf58f659397" name="Changes" comment="updated readme">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/com/project/Main.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/project/Main.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/project/booking/BookingArrayDataAccessService.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/project/booking/BookingArrayDataAccessService.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/project/booking/BookingDAO.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/project/booking/BookingDAO.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/com/project/booking/BookingService.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/project/booking/BookingService.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/project/car/CarArrayDataAccessService.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/project/car/CarArrayDataAccessService.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/project/car/CarDAO.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/project/car/CarDAO.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/com/project/car/CarService.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/project/car/CarService.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/project/user/UserArrayDataAccessService.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/project/user/UserArrayDataAccessService.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/project/user/UserDAO.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/project/user/UserDAO.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/project/user/UserFileDataAccessService.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/project/user/UserFileDataAccessService.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/com/project/user/UserService.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/project/user/UserService.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
@@ -28,7 +35,7 @@
   <component name="Git.Settings">
     <option name="RECENT_BRANCH_BY_REPOSITORY">
       <map>
-        <entry key="$PROJECT_DIR$" value="step2-interfaces-files" />
+        <entry key="$PROJECT_DIR$" value="step3-dependency-injection" />
       </map>
     </option>
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
@@ -52,17 +59,17 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent">{
-  &quot;keyToString&quot;: {
-    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
-    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
-    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
-    &quot;git-widget-placeholder&quot;: &quot;step3-dependency-injection&quot;,
-    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,
-    &quot;last_opened_file_path&quot;: &quot;C:/Users/Amador/IdeaProjects/amigoscode&quot;,
-    &quot;settings.editor.selected.configurable&quot;: &quot;MavenSettings&quot;
+  <component name="PropertiesComponent"><![CDATA[{
+  "keyToString": {
+    "RunOnceActivity.OpenProjectViewOnStart": "true",
+    "RunOnceActivity.ShowReadmeOnStart": "true",
+    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
+    "git-widget-placeholder": "step4-lists",
+    "ignore.virus.scanning.warn.message": "true",
+    "last_opened_file_path": "C:/Users/Amador/IdeaProjects/amigoscode",
+    "settings.editor.selected.configurable": "MavenSettings"
   }
-}</component>
+}]]></component>
   <component name="RunManager">
     <configuration name="Main" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
       <option name="MAIN_CLASS_NAME" value="com.project.Main" />
@@ -200,7 +207,15 @@
       <option name="project" value="LOCAL" />
       <updated>1692890490004</updated>
     </task>
-    <option name="localTasksCounter" value="14" />
+    <task id="LOCAL-00014" summary="updated readme">
+      <option name="closed" value="true" />
+      <created>1692891638671</created>
+      <option name="number" value="00014" />
+      <option name="presentableId" value="LOCAL-00014" />
+      <option name="project" value="LOCAL" />
+      <updated>1692891638671</updated>
+    </task>
+    <option name="localTasksCounter" value="15" />
     <servers />
   </component>
   <component name="Vcs.Log.Tabs.Properties">
Index: src/main/java/com/project/booking/BookingDAO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.project.booking;\r\n\r\npublic interface BookingDAO {\r\n\r\n    Booking[] getAllBookings();\r\n\r\n    Booking saveBooking(Booking booking);\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/booking/BookingDAO.java b/src/main/java/com/project/booking/BookingDAO.java
--- a/src/main/java/com/project/booking/BookingDAO.java	(revision d53c91abe2bc02acf0c928f732a5b49aa0f918ec)
+++ b/src/main/java/com/project/booking/BookingDAO.java	(date 1692892714542)
@@ -1,8 +1,10 @@
 package com.project.booking;
 
+import java.util.List;
+
 public interface BookingDAO {
 
-    Booking[] getAllBookings();
+    List<Booking> getAllBookings();
 
-    Booking saveBooking(Booking booking);
+    void saveBooking(Booking booking);
 }
Index: src/main/resources/bookings.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>BOOKINGS:\r\nUser{uuid=1fda7774-b948-42fa-ad35-7eb1a7248e35, name='Samira'}\r\nCar{uuid=f93d0241-e7f7-447a-a090-0f63fb959dc0, brand='AUDI', pricePerDay=45, isElectric=false}\r\nRef: 1dbef7ab-0499-437a-8716-b3ef8e3ae2f1\r\nDate: 2023-08-24\r\n\r\nUser{uuid=0236e9db-8c46-45a1-8fef-718d12e271f3, name='Bond'}\r\nCar{uuid=6f866182-a2ef-44f7-9f72-6685d8e7d747, brand='TESLA', pricePerDay=69, isElectric=true}\r\nRef: 6146dad1-8eef-42a8-8a9b-f8ea961721f8\r\nDate: 2023-08-24\r\n\r\nUser{uuid=1fda7774-b948-42fa-ad35-7eb1a7248e35, name='Samira'}\r\nCar{uuid=a8dad791-7fa5-46f4-92c6-cf9eee889b3c, brand='MERCEDES', pricePerDay=55, isElectric=false}\r\nRef: da786b24-d1f1-419a-9bbf-3de2cbde9d53\r\nDate: 2023-08-24\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/bookings.txt b/src/main/resources/bookings.txt
--- a/src/main/resources/bookings.txt	(revision d53c91abe2bc02acf0c928f732a5b49aa0f918ec)
+++ b/src/main/resources/bookings.txt	(date 1692893257918)
@@ -14,3 +14,8 @@
 Ref: da786b24-d1f1-419a-9bbf-3de2cbde9d53
 Date: 2023-08-24
 
+User{uuid=1fda7774-b948-42fa-ad35-7eb1a7248e35, name='Samira'}
+Car{uuid=6f15b728-f63f-45e9-896d-9ce22fbf9a48, brand='AUDI', pricePerDay=45, isElectric=false}
+Ref: c6ef92bc-1b57-4b71-a605-6d5ea4f2a8d5
+Date: 2023-08-24
+
Index: src/main/java/com/project/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.project;\r\n\r\nimport com.project.booking.Booking;\r\nimport com.project.booking.BookingArrayDataAccessService;\r\nimport com.project.booking.BookingDAO;\r\nimport com.project.booking.BookingService;\r\nimport com.project.car.Car;\r\nimport com.project.car.CarArrayDataAccessService;\r\nimport com.project.car.CarDAO;\r\nimport com.project.car.CarService;\r\nimport com.project.user.User;\r\nimport com.project.user.UserDAO;\r\nimport com.project.user.UserFileDataAccessService;\r\nimport com.project.user.UserService;\r\n\r\nimport java.util.Scanner;\r\nimport java.util.UUID;\r\n\r\npublic class Main {\r\n    //Dependency\r\n    private static final UserDAO userDAO = new UserFileDataAccessService();\r\n    private static final CarDAO carDAO = new CarArrayDataAccessService();\r\n    private static final BookingDAO bookingDAO = new BookingArrayDataAccessService();\r\n\r\n    //Injection\r\n    private static final UserService userService = new UserService(userDAO);\r\n    private static final CarService carService = new CarService(carDAO);\r\n    private static final BookingService bookingService = new BookingService(\r\n            bookingDAO,\r\n            carService,\r\n            userService\r\n    );\r\n    private static final Scanner scInt = new Scanner(System.in);\r\n    private static final Scanner scText = new Scanner(System.in);\r\n\r\n    public static void main(String[] args) {\r\n        int option;\r\n        do {\r\n            System.out.println(\"\"\"\r\n                                        \r\n                    BOOKING CLI SYSTEM ©\r\n                    1\uFE0F⃣ - Book Car\r\n                    2\uFE0F⃣ - View All Users Booked Car\r\n                    3\uFE0F⃣ - View All Bookings\r\n                    4\uFE0F⃣ - View Available Cars\r\n                    5\uFE0F⃣ - View Available Electric Cars\r\n                    6\uFE0F⃣ - View All Users\r\n                    7\uFE0F⃣ - Exit\r\n                    \"\"\");\r\n            option = scInt.nextInt();\r\n            UUID uuidCar;\r\n            UUID uuidUser;\r\n            Booking booking;\r\n            switch (option) {\r\n                case 1 -> {\r\n                    if (carService.getAllAvailableCars().length != 0) {\r\n                        viewAvailableCars();\r\n                        uuidCar = askUuidCar();\r\n                        viewUsers();\r\n                        uuidUser = askUuidUser();\r\n                        booking = bookingService.bookACar(uuidCar, uuidUser);\r\n                        System.out.println(\"\uD83C\uDF89 Succesfully booked car \" + booking.getCar() + \" by user \" + booking.getUser() + \"\\n\" +\r\n                                \"Reference: \" + booking.getUuid());\r\n                    } else\r\n                        System.out.println(\"There are no available cars for booking \uD83D\uDE41\");\r\n                }\r\n                case 2 -> {\r\n                    viewUsers();\r\n                    uuidUser = askUuidUser();\r\n                    booking = bookingService.getCarBookedByUser(uuidUser);\r\n                    if (booking != null)\r\n                        System.out.println(\"\uD83D\uDE00 \" + booking.getUser() +\r\n                                \" has this car booked:\\n\" + isElectricEmoji(booking.getCar()) +\r\n                                booking.getCar() + \"\\nReference: \" + booking.getUuid());\r\n                    else\r\n                        System.out.println(\"User\" + userService.findUserById(uuidUser) +\r\n                                \" does not have any car booked yet \uD83D\uDE41\");\r\n                }\r\n                case 3 -> viewAllBookings();\r\n                case 4 -> viewAvailableCars();\r\n                case 5 -> viewAvailableElectricCars();\r\n                case 6 -> viewUsers();\r\n                case 7 -> System.out.println(\"Bye! \uD83D\uDC4B\");\r\n                default -> System.out.println(\"Invalid option ❌\");\r\n            }\r\n        } while (option != 7);\r\n    }\r\n\r\n    private static UUID askUuidUser() {\r\n        System.out.println(\"\\n⏩ Select uuid user number:\");\r\n        return UUID.fromString(scText.nextLine());\r\n    }\r\n\r\n    private static UUID askUuidCar() {\r\n        System.out.println(\"\\n⏩ Select uuid car number:\");\r\n        return UUID.fromString(scText.nextLine());\r\n    }\r\n\r\n    private static void viewAvailableElectricCars() {\r\n        if (carService.getAllElectricAvailableCars().length != 0) {\r\n            for (Car car : carService.getAllElectricAvailableCars()) {\r\n                System.out.println(\"\uD83D\uDD05 \" + car);\r\n            }\r\n        } else\r\n            System.out.println(\"There are no available electric cars \uD83D\uDE41\");\r\n    }\r\n\r\n    private static void viewAllBookings() {\r\n        if (bookingService.getAllBookings().length != 0) {\r\n            for (Booking b : bookingService.getAllBookings()) {\r\n                System.out.println(\"\uD83D\uDD11 Booking: \" + b);\r\n            }\r\n        } else\r\n            System.out.println(\"There are no bookings yet \uD83D\uDE10\");\r\n    }\r\n\r\n    private static void viewUsers() {\r\n        if (userService.getAllUsers().length != 0) {\r\n            for (User user : userService.getAllUsers()) {\r\n                System.out.println(\"\uD83D\uDE00 \" + user);\r\n            }\r\n        } else\r\n            System.out.println(\"There are no users \uD83D\uDE10\");\r\n    }\r\n\r\n    private static void viewAvailableCars() {\r\n        if (carService.getAllAvailableCars().length != 0) {\r\n            for (Car car : carService.getAllAvailableCars()) {\r\n                String isElectric = isElectricEmoji(car);\r\n                System.out.println(isElectric + car);\r\n            }\r\n        } else\r\n            System.out.println(\"There are no available cars \uD83D\uDE41\");\r\n\r\n    }\r\n\r\n    private static String isElectricEmoji(Car car) {\r\n        return car.isElectric() ? \"\uD83D\uDD05 \" : \"\uD83D\uDE98 \";\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/Main.java b/src/main/java/com/project/Main.java
--- a/src/main/java/com/project/Main.java	(revision d53c91abe2bc02acf0c928f732a5b49aa0f918ec)
+++ b/src/main/java/com/project/Main.java	(date 1692892955398)
@@ -53,7 +53,7 @@
             Booking booking;
             switch (option) {
                 case 1 -> {
-                    if (carService.getAllAvailableCars().length != 0) {
+                    if (!carService.getAllAvailableCars().isEmpty()) {
                         viewAvailableCars();
                         uuidCar = askUuidCar();
                         viewUsers();
@@ -97,7 +97,7 @@
     }
 
     private static void viewAvailableElectricCars() {
-        if (carService.getAllElectricAvailableCars().length != 0) {
+        if (!carService.getAllElectricAvailableCars().isEmpty()) {
             for (Car car : carService.getAllElectricAvailableCars()) {
                 System.out.println("🔅 " + car);
             }
@@ -106,7 +106,7 @@
     }
 
     private static void viewAllBookings() {
-        if (bookingService.getAllBookings().length != 0) {
+        if (!bookingService.getAllBookings().isEmpty()) {
             for (Booking b : bookingService.getAllBookings()) {
                 System.out.println("🔑 Booking: " + b);
             }
@@ -115,7 +115,7 @@
     }
 
     private static void viewUsers() {
-        if (userService.getAllUsers().length != 0) {
+        if (!userService.getAllUsers().isEmpty()) {
             for (User user : userService.getAllUsers()) {
                 System.out.println("😀 " + user);
             }
@@ -124,7 +124,7 @@
     }
 
     private static void viewAvailableCars() {
-        if (carService.getAllAvailableCars().length != 0) {
+        if (!carService.getAllAvailableCars().isEmpty()) {
             for (Car car : carService.getAllAvailableCars()) {
                 String isElectric = isElectricEmoji(car);
                 System.out.println(isElectric + car);
